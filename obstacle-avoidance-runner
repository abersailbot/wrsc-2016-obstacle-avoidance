#!/usr/bin/env python

from multiprocessing import Process, Manager
import time

import obstacle_detection
import avoidance_behaviour


def image_processing_loop(namespace):
    print 'started loop'
    while True:
        print 'checking is_obstacle_detected'
        if obstacle_detection.is_obstacle_detected():
            print 'IS_OBSTACLE_DETECTED = TRUE'
            namespace.is_obstacle_detected = True
        print(namespace)
        time.sleep(0.3)


def behaviour_spawner(self, namespace):
    behaviour = VisualObstacleAvoidance(namespace)
    behaviour.run()


if __name__ == '__main__':
    with Manager() as manager:
        namespace = manager.Namespace()

        namespace.is_obstacle_detected = False

        behaviour_process = Process(target=behaviour_spawner, args=(namespace,))
        behaviour_process.start()

        print(namespace)

        image_processing_loop(namespace)
